# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import config_rodada_pb2 as config__rodada__pb2


class ServicoRodadaStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RecebeDica = channel.unary_unary(
                '/configuration.ServicoRodada/RecebeDica',
                request_serializer=config__rodada__pb2.Dica.SerializeToString,
                response_deserializer=config__rodada__pb2.MensagemVazia.FromString,
                )
        self.RecebePalpite = channel.unary_unary(
                '/configuration.ServicoRodada/RecebePalpite',
                request_serializer=config__rodada__pb2.Palpite.SerializeToString,
                response_deserializer=config__rodada__pb2.PalpiteResposta.FromString,
                )


class ServicoRodadaServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RecebeDica(self, request, context):
        """recebe a dica do jogador 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecebePalpite(self, request, context):
        """recebe o palpite do jogador
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServicoRodadaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RecebeDica': grpc.unary_unary_rpc_method_handler(
                    servicer.RecebeDica,
                    request_deserializer=config__rodada__pb2.Dica.FromString,
                    response_serializer=config__rodada__pb2.MensagemVazia.SerializeToString,
            ),
            'RecebePalpite': grpc.unary_unary_rpc_method_handler(
                    servicer.RecebePalpite,
                    request_deserializer=config__rodada__pb2.Palpite.FromString,
                    response_serializer=config__rodada__pb2.PalpiteResposta.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'configuration.ServicoRodada', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServicoRodada(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RecebeDica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/configuration.ServicoRodada/RecebeDica',
            config__rodada__pb2.Dica.SerializeToString,
            config__rodada__pb2.MensagemVazia.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecebePalpite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/configuration.ServicoRodada/RecebePalpite',
            config__rodada__pb2.Palpite.SerializeToString,
            config__rodada__pb2.PalpiteResposta.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
